#include <iostream>
#include <vector>

using namespace std;

spiralOrder(std::vector<std::vector<int>>& matrix) {
    vector<int> result;
    int m = matrix.size();
    int n = matrix[0].size();
    int top = 0, bottom = m - 1, left = 0, right = n - 1; // borders

    while (top <= bottom && left <= right) {
        for (int j = left; j <= right; ++j) {
            result.push_back(matrix[top][j]);
        }
        top++; // go right

        for (int i = top; i <= bottom; ++i) {
            result.push_back(matrix[i][right]);
        }
        right--; // downstairs

        if (top <= bottom) {
            for (int j = right; j >= left; --j) {
                result.push_back(matrix[bottom][j]);
            }
            bottom--; 
        }

        if (left <= right) {
            for (int i = bottom; i >= top; --i) {
                result.push_back(matrix[i][left]);
            }
            left++;
        }
    }

    return result;
}

int main() {  //taken from leetcode example
    vector<vector<int>> matrix = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };

    vector<int> result = spiralOrder(matrix); // 1->2->3->6->9->8->7->4->5
    cout << "The elements in spiral order are: ";
    for (int num : result) {
        cout << num << " ";
    }

    return 0;
}
