#include <iostream>
#include <vector>

// worst runtime, probably, "switch" can fix it

std::vector<int> twoSum(std::vector<int>& numbers, int goal) {
    int left = 0;
    int right = numbers.size() - 1;

    while (left < right) {
        int sum = numbers[left] + numbers[right];
        if (sum == goal) {
            return {left + 1, right + 1};
        } else if (sum < goal) {
            left++;
        } else {
            right--;
        }
    }

    return {};
}

int main() {
    std::vector<int> numbers = {2, 7, 11, 15};
    int goal = 9;

    std::vector<int> result = twoSum(numbers, goal);
    if (!result.empty()) {
        std::cout << "Indices: " << result[0] << " and " << result[1] << std::endl;
    } else {
        std::cout << "No solution found." << std::endl;
    }

    return 0;
}
